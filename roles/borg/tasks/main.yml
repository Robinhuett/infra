---

- name: Install borgbackup
  become: true
  apt:
    name:
    - borgbackup

- name: Install borgmatic
  become: true
  become_user: root
  pip:
    name:
    - borgmatic

- name: Ensure /etc/borgmatic exits
  become: true
  file:
    path: /etc/borgmatic
    state: directory
    mode: 0700
    owner: root

- name: Add Repokey
  become: true
  template:
    src: key.j2
    dest: /etc/borgmatic/key
    mode: 0600

- name: Add borgmatic config
  become: true
  template:
    src: config.yaml.j2
    dest: /etc/borgmatic/config.yaml
    mode: 0600

- name: Add rsync.net host to known_hosts
  become: true
  become_user: root
  known_hosts:
    name: "{{ borg.host }}"
    key: "{{ borg.host_key }}"

- name: Ensure that root has a ssh key
  become: true
  user:
    name: root
    generate_ssh_key: true
  register: root_user

- name: Get the ssh public key of root
  set_fact:
    ssh_public_key: "{{ root_user['ssh_public_key'] }}"

- name: Add rsync.net host to known_hosts on ci machine
  known_hosts:
    name: "{{ borg.host }}"
    key: "{{ borg.host_key }}"
  delegate_to: localhost
  run_once: true

- name: Get current ssh keys
  command: ssh {{ borg.user }}@{{ borg.host }} 'cat .ssh/authorized_keys'
  delegate_to: localhost
  run_once: true
  changed_when: False
  register: current_ssh_public_keys
  no_log: true

- name: Add public key to rysnc.net account
  shell: set -o pipefail && echo '{{ item.key }}' | ssh {{ borg.user }}@{{ borg.host }} 'dd of=.ssh/authorized_keys oflag=append conv=notrunc'
  args:
   executable: /bin/bash
  loop: "{{ ssh_public_keys }}"
  loop_control:
    label: "{{ item.host }}"
  when:
  - not ansible_check_mode
  - item.key is defined
  - item.key not in current_ssh_public_keys.stdout
  delegate_to: localhost
  run_once: true

- name: Initiallize borg repo
  become: true
  become_user: root
  command:
    cmd: borgmatic init --encryption repokey
  register: borg_repo_init
  changed_when: borg_repo_init.stdout | length > 0

- name: Add borgmatic systemd units
  become: true
  template:
    src: "{{ item }}.j2"
    dest: /etc/systemd/system/{{ item }}
    mode: 0644
  loop:
  - borgmatic.service
  - borgmatic.timer
  vars:
    exec_time_hour: "{{ 6 | random(seed=inventory_hostname) }}"
    exec_time_minute: "{{ 59 | random(seed=inventory_hostname) }}"

- name: Enable borgmatic systemd timer
  become: true
  systemd:
    name: borgmatic.timer
    state: started
    enabled: true
    daemon_reload: true
